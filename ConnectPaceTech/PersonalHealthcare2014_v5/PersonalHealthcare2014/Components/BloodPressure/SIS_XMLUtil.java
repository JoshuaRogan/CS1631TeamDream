//package Components.GUI;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class SIS_XMLUtil {
	public static void writeToXML(KeyValueList in1, File in2)
			     throws IOException{
		if ((in1 == null) || (in1.size() == 0)) {
			return;
		}
		if (in2.exists()) {
			in2.delete();
		}
		PrintWriter pw = new PrintWriter(new FileWriter(in2));
		pw.println("<?xml version=\"1.0\" standalone=\"yes\"?>");
		pw.println("<!--Generated by prjRemote Java Version 1.0-->");
		pw.println("<Msg>");
		pw.println("\t<Head>");
		String temp = in1.getValue("MsgID");
		if (temp == null) {
			temp = "";
		}
		pw.println("\t\t<MsgID>" + temp + "</MsgID>");
		temp = in1.getValue("Description");
		if (temp == null) {
			temp = "";
		}
		pw.println("\t\t<Description>" + temp + "</Description>");
		pw.println("\t</Head>");
		pw.println("\t<Body>");
		for(int i = 0; i < in1.size(); i++) {
			if ((!in1.keyAt(i).equals("MsgID")) && (!in1.keyAt(i).equals("Description"))) {
				pw.println("\t\t<Item><Key>" + in1.keyAt(i) + "</Key><Value>" + in1.valueAt(i) + "</Value></Item>");
			}
		}
		pw.println("\t</Body>");
		pw.println("</Msg>");
		pw.flush();
		pw.close();
	}
			   
	public static KeyValueList readFromXML(File in){
		KeyValueList result = new KeyValueList();
		try{
			DocumentBuilderFactory aDocumentBuilderFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder aDocumentBuilder = aDocumentBuilderFactory.newDocumentBuilder();
			Document aDocument = aDocumentBuilder.parse(in);
			Element DocElement = aDocument.getDocumentElement();        
			NodeList aNodeList = DocElement.getElementsByTagName("MsgID");
			
			if (!aNodeList.item(0).hasChildNodes()) {
				result.addPair("MsgID", "");
			}
			else{
				result.addPair("MsgID", aNodeList.item(0).getFirstChild().getNodeValue());
			}
			aNodeList = DocElement.getElementsByTagName("Description");
			if(!aNodeList.item(0).hasChildNodes()) {
				result.addPair("Description", "");
			}
			else{
				result.addPair("Description", aNodeList.item(0).getFirstChild().getNodeValue());
			}
			aNodeList = DocElement.getElementsByTagName("Item");
			for(int i = 0; i < aNodeList.getLength(); i++){
				NodeList KeyNodeList = ((Element)aNodeList.item(i)).getElementsByTagName("Key");
			    NodeList ValueNodeList = ((Element)aNodeList.item(i)).getElementsByTagName("Value");
			    result.addPair(KeyNodeList.item(0).getFirstChild().getNodeValue(), ValueNodeList.item(0).getFirstChild().getNodeValue());
			}
		}
		catch (Exception localException) {}
		if (result.size() == 0) {
			return null;
		}
		return result;
	}
}
